@using Desafio.Umbler.Features.DomainContext.Validators
@using Desafio.Umbler.Shared.Services.TldRegex
@inject ITldRegexService TldRegexService

<div class="row justify-content-center">
    <div class="col-12 col-lg-10 col-xl-8">
        <div class="d-flex justify-content-center flex-wrap gap-3">
            @foreach (var extension in Extensions)
            {
                <button class="extension-button rounded-pill px-4 py-2" 
                        type="button"
                        @onclick="@(() => HandleClick(extension))"
                        disabled="@IsLoading">
                    @extension
                </button>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public List<string> Extensions { get; set; } = new()
    {
        ".com.br",
        ".com",
        ".net",
        ".org",
        ".io",
        ".app"
    };

    [Parameter]
    public bool IsLoading { get; set; }

    [Parameter]
    public string CurrentSearchText { get; set; } = "";

    [Parameter]
    public EventCallback<string> OnExtensionClick { get; set; }

    private async Task HandleClick(string extension)
    {
        var cleanValue = TldRegexService.TldRemovalRegex.Replace(CurrentSearchText.Trim(), "");
        var newValue = cleanValue + extension;
        await OnExtensionClick.InvokeAsync(newValue);
    }
}
